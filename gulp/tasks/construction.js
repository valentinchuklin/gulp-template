const gulp = require('gulp');

// Live server
const browsersync = require('browser-sync');
const liveserver = function bsync() {
  browsersync.init({
    watch: true,
    server: {
      baseDir: "./dev-build/",
    }
  })
}

//Pug2html
const pug = require('gulp-pug');
const htmlBeautify = require('gulp-html-beautify');
const htmlmin = require('gulp-htmlmin');

const pugfunction = function pug2html(cb) {
  var htmlBeautifyOptions = {
    "indent_size": 2
  }
  var htmlminOptions = {
    collapseWhitespace: true,
    includeAutoGeneratedTags: false
  }
  return gulp.src('./src/**/index.pug')
    .pipe(pug())
    .pipe(htmlmin(htmlminOptions))
    .pipe(htmlBeautify(htmlBeautifyOptions))
    .pipe(gulp.dest('./dev-build'));
}
//Watch pug function
const watchpugchanges = function () {
  gulp.watch('src/**/*.pug', { events: 'all' }, pugfunction)
}

//Sass function
const sass = require('gulp-sass');
sass.compiler = require('node-sass');
const autoprefixer = require('autoprefixer');
const postcss = require('gulp-postcss');
const sortMediaQueries = require('postcss-sort-media-queries');

const sassfunction = function () {
  var processors = [
    autoprefixer(),
    sortMediaQueries({
      sort: 'mobile-first'
    })
  ]
  return gulp.src('src/**/style.sass')
    .pipe(sass({ outputStyle: 'expanded' }).on('error', sass.logError))
    .pipe(postcss(processors))
    .pipe(gulp.dest('./dev-build/'));
}
//Watch sass function
const watchsasschanges = function () {
  gulp.watch('./src/**/*.sass', { events: 'all' }, sassfunction)
}

//JS function
const jsfunction = function () {
  return gulp.src(['./src/**/*.js', '!./src/**/includes/**/*', '!./src/thirdparty/**/*'])
    .pipe(gulp.dest('./dev-build/'));
}
//Watch js function
const watchjs = function () {
  gulp.watch(['./src/**/*.js', '!./src/third-party/../*'], { events: 'all' }, jsfunction)
}
//PHP function
const phpfunction = function () {
  return gulp.src(['./src/**/*.php', '!./src/**/includes/**/*', '!./src/thirdparty/**/*'])
    .pipe(gulp.dest('./dev-build/'));
}
//Watch PHP function
const watchphp = function () {
  gulp.watch(['./src/**/*.php', '!./src/third-party/../*'], { events: 'all' }, phpfunction)
}
//Оптимизация картинок
const imagemin = require('gulp-imagemin')
const imgCompress = require('imagemin-jpeg-recompress')
const cache = require('gulp-cache');

const imgfunction = function () {
  return gulp.src(['./src/**/*.svg', './src/**/*.jpg', './src/**/*.png', './src/**/*.gif', '!./src/**/includes/**/*', '!./src/common/svg-sprite/*'])
    .pipe(
      cache(
        imagemin([
          imgCompress({
            loops: 4,
            min: 75,
            max: 80,
            quality: 'high'
          }),
          imagemin.gifsicle(),
          imagemin.optipng(),
          imagemin.svgo()
        ])
      )
    )
    .pipe(gulp.dest('dev-build/'));
}
//Watch img function
const watchimg = function () {
  gulp.watch(['./src/**/*.svg', './src/**/*.jpg', './src/**/*.png', './src/**/*.gif', '!./src/**/includes/**/*'], { events: 'all' }, imgfunction)
}

//Копирование шрифтов
const copyfontsfunction = function () {
  return gulp.src('./src/common/fonts/*.woff*')
    .pipe(gulp.dest('./dev-build/common/fonts/'));
}
//Watch fonts
const watchfonts = function () {
  gulp.watch('./src/common/fonts/*.woff*', { events: 'all' }, copyfontsfunction)
}

//Копирование сторонних скриптов
const copythirdpartyfunction = function () {
  return gulp.src('./src/thirdparty/**/*')
    .pipe(gulp.dest('./dev-build/thirdparty/'));
}
//Watch thirdparty
const watchthirdparty = function () {
  gulp.watch('./src/thirdparty/**/*', { events: 'all' }, copythirdpartyfunction)
}
//Очистка папки dev-build перед заданием
const GulpClean = require('gulp-clean')

const devBuildCleanFunction = function () {
  return gulp.src('./dev-build/*', { read: false })
    .pipe(GulpClean())
}
//Final task
const build = gulp.series(devBuildCleanFunction, pugfunction, sassfunction, jsfunction, phpfunction, imgfunction, copyfontsfunction, copythirdpartyfunction)
const watch = gulp.parallel(liveserver, watchpugchanges, watchsasschanges, watchjs, watchphp, watchimg, watchfonts, watchthirdparty)

module.exports = gulp.series(build, watch)