const gulp = require('gulp');

//Очистка папки build перед заданием
const GulpClean = require('gulp-clean');

const buildCleanFunction = function () {
  return gulp.src('./build/*', {read: false})
  .pipe(GulpClean());
}

//Pug2html
const pug = require('gulp-pug');
const htmlmin = require('gulp-htmlmin');
const replace = require('gulp-replace');
const pugfunction = function pug2html(cb) {
  var htmlminOptions = {
    collapseWhitespace: true,
    includeAutoGeneratedTags: false,
    removeComments: true,
    collapseBooleanAttributes: true,
    preserveLineBreaks: true
  }
  var cacheTimeStamp = new Date().getTime();
  return gulp.src(['./src/*.pug', '!./src/common.pug'])
    .pipe(pug())
    .pipe(replace('.css', '.css?t=' + cacheTimeStamp))
    .pipe(replace('.js', '.js?t=' + cacheTimeStamp))
    .pipe(htmlmin(htmlminOptions))
    .pipe(gulp.dest('./build/'));
}
//Sass function
const sass = require('gulp-sass')
sass.compiler = require('node-sass')
const autoprefixer = require('autoprefixer')
const postcss = require('gulp-postcss')
const sortMediaQueries = require('postcss-sort-media-queries')
const cssmin = require('gulp-cssmin')

const sassfunction = function () {
  var processors = [
    autoprefixer(),
    sortMediaQueries({
      sort: 'mobile-first'
    })
  ]
  return gulp.src('src/*.sass')
    .pipe(sass({outputStyle: 'expanded'}).on('error', sass.logError))
    .pipe(postcss(processors))
    .pipe(cssmin())
    .pipe(gulp.dest('./build/'));
}
//JS function
const jsfunction = function(){
  return gulp.src(['./src/**/*.js', '!./src/**/includes/**/*', '!./src/thirdparty/**/*'])
    .pipe(gulp.dest('./build/'));
}
//PHP function
const phpfunction = function(){
  return gulp.src(['./src/**/*.php', '!./src/**/includes/**/*', '!./src/thirdparty/**/*'])
    .pipe(gulp.dest('./build/'));
}
//Оптимизация и копирование картинок
const imagemin = require('gulp-imagemin');
const imgCompress = require('imagemin-jpeg-recompress');
const cache = require('gulp-cache');

const imgfunction = function () {
  return gulp.src(['./src/**/*.svg', './src/**/*.jpg', './src/**/*.png', './src/**/*.gif', '!./src/**/includes/**/*'])
    .pipe(
      cache(
        imagemin([
          imgCompress({
            loops: 4,
            min: 75,
            max: 80,
            quality: 'high'
          }),
          imagemin.gifsicle(),
          imagemin.optipng(),
          imagemin.svgo()
        ])
      )
    )
    .pipe(gulp.dest('build/'));
}
//Копирование шрифтов
const copyfontsfunction = function () {
  return gulp.src('./src/common/fonts/*.woff*')
    .pipe(gulp.dest('./build/common/fonts/'));
}
//Копирование сторонних скриптов
const copythirdpartyfunction = function () {
  return gulp.src('./src/thirdparty/**/*')
    .pipe(gulp.dest('./build/thirdparty/'));
}

//Live server - проверим результат в браузере
const browsersync = require('browser-sync')
const liveserver = function bsync() {
  browsersync.init({
    watch: true,
    server: {
      baseDir: "./build/",
    }
  })
}

//Final task
const build = gulp.series(buildCleanFunction, pugfunction, sassfunction, jsfunction, phpfunction, imgfunction, copyfontsfunction, copythirdpartyfunction, liveserver)

module.exports = gulp.series(build)